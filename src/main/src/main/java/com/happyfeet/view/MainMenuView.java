package com.happyfeet.view;

import java.util.Scanner;

/**
 * Vista Principal del Sistema HappyFeet
 *
 * FUNCI√ìN: Selector de m√≥dulos principales
 * Esta clase NO contiene l√≥gica de negocio ni funcionalidades internas.
 * Solo muestra el men√∫ principal y redirige a las vistas correspondientes.
 *
 * FLUJO: Main.java ‚Üí MainMenuView ‚Üí Vista del M√≥dulo ‚Üí Funcionalidades
 */
public class MainMenuView {

    private final Scanner sc = new Scanner(System.in);

    /**
     * Inicia el men√∫ principal del sistema
     */
    public void iniciar() {
        while (true) {
            mostrarMenuPrincipal();
            int opcion = leerEntero("Seleccione una opci√≥n: ");

            switch (opcion) {
                case 1 -> iniciarModuloPacientes();
                case 2 -> iniciarModuloServicios();
                case 3 -> iniciarModuloInventario();
                case 4 -> iniciarModuloFacturacion();
                case 5 -> iniciarModuloActividades();
                case 6 -> iniciarModuloReportes();
                case 7 -> IniciarReporteCompleto();
                case 0 -> {
                    System.out.println("\n¬°Gracias por usar HappyFeet! üêæ");
                    System.out.println("Hasta pronto...\n");
                    return; // Salir del sistema
                }
                default -> System.out.println("‚ùå Opci√≥n no v√°lida. Intente nuevamente.");
            }
        }
    }

    /**
     * Muestra el men√∫ principal con los m√≥dulos disponibles
     */
    private void mostrarMenuPrincipal() {
        System.out.println("\n" + "=".repeat(60));
        System.out.println("           üêæ CL√çNICA VETERINARIA HAPPYFEET üêæ");
        System.out.println("=".repeat(60));
        System.out.println("  SELECCIONE EL M√ìDULO AL QUE DESEA ACCEDER:");
        System.out.println();
        System.out.println("  1. üë•  Gesti√≥n de Pacientes (Due√±os y Mascotas)");
        System.out.println("  2. üè•  Servicios M√©dicos y Citas");
        System.out.println("  3. üì¶  Inventario y Farmacia");
        System.out.println("  4. üí∞  Facturaci√≥n");
        System.out.println("  5. üé™  Actividades Especiales");
        System.out.println("  6. üìä  Reportes Gerenciales");
        System.out.println("  7. üìä  Reporte Completo");
        System.out.println();
        System.out.println("  0. üö™  Salir del Sistema");
        System.out.println("=".repeat(60));
    }

    // =====================================================================
    // ===== M√ìDULO 1: GESTI√ìN DE PACIENTES (Due√±os y Mascotas) =====
    // =====================================================================
    /**
     * Redirige al m√≥dulo de gesti√≥n de pacientes
     * Delega toda la funcionalidad a PacienteView
     */
    private void iniciarModuloPacientes() {
        PacienteView pacienteView = new PacienteView(sc);
        pacienteView.mostrarMenu();
    }

    // =====================================================================
    // ===== M√ìDULO 2: SERVICIOS M√âDICOS Y CITAS =====
    // =====================================================================
    /**
     * Redirige al m√≥dulo de servicios m√©dicos
     * Delega toda la funcionalidad a ServiciosMedicosView
     */
    private void iniciarModuloServicios() {
        ServiciosMedicosView serviciosView = new ServiciosMedicosView(sc);
        serviciosView.mostrarMenu();
    }

    // =====================================================================
    // ===== M√ìDULO 3: INVENTARIO Y FARMACIA =====
    // =====================================================================
    /**
     * Redirige al m√≥dulo de inventario y farmacia
     * Delega toda la funcionalidad a InventarioView
     */
    private void iniciarModuloInventario() {
        InventarioView inventarioView = new InventarioView(sc);
        inventarioView.mostrarMenu();
    }

    // =====================================================================
    // ===== M√ìDULO 4: FACTURACI√ìN =====
    // =====================================================================
    /**
     * Redirige al m√≥dulo de facturaci√≥n
     * Delega toda la funcionalidad a FacturacionView
     */
    private void iniciarModuloFacturacion() {
        FacturacionView facturacionView = new FacturacionView(sc);
        facturacionView.mostrarMenu();
    }

    // =====================================================================
    // ===== M√ìDULO 5: ACTIVIDADES ESPECIALES =====
    // =====================================================================
    /**
     * Redirige al m√≥dulo de actividades especiales
     * Delega toda la funcionalidad a ActividadesView
     */
    private void iniciarModuloActividades() {
        ActividadesView actividadesView = new ActividadesView(sc);
        actividadesView.mostrarMenu();
    }

    // =====================================================================
    // ===== M√ìDULO 6: REPORTES GERENCIALES =====
    // =====================================================================
    /**
     * Redirige al m√≥dulo de reportes gerenciales
     * Delega toda la funcionalidad a ReportesView
     */
    private void iniciarModuloReportes() {
        ReportesView reportesView = new ReportesView(sc);
        reportesView.mostrarMenu();
    }
    
    private void IniciarReporteCompleto() {
        ReportesView reportesView = new ReportesView(sc);
        reportesView.mostrarMenu();
    }

    // =====================================================================
    // ===== M√âTODOS AUXILIARES =====
    // =====================================================================
    /**
     * Lee un n√∫mero entero validado desde la consola
     */
    private int leerEntero(String mensaje) {
        while (true) {
            try {
                System.out.print(mensaje);
                return Integer.parseInt(sc.nextLine());
            } catch (NumberFormatException e) {
                System.out.println("‚ùå Error: Ingrese un n√∫mero v√°lido");
            }
        }
    }
}